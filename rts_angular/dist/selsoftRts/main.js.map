{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Services/api-url.ts","webpack:///./src/app/Services/client.service.ts","webpack:///./src/app/Services/hide-component.service.ts","webpack:///./src/app/Services/logged-user.service.ts","webpack:///./src/app/Services/requirements.service.ts","webpack:///./src/app/Services/submission.service.ts","webpack:///./src/app/Services/user.service.ts","webpack:///./src/app/add-client/add-client.component.css","webpack:///./src/app/add-client/add-client.component.html","webpack:///./src/app/add-client/add-client.component.ts","webpack:///./src/app/add-new-requirement/add-new-requirement.component.css","webpack:///./src/app/add-new-requirement/add-new-requirement.component.html","webpack:///./src/app/add-new-requirement/add-new-requirement.component.ts","webpack:///./src/app/add-new-submissions/add-new-submissions.component.css","webpack:///./src/app/add-new-submissions/add-new-submissions.component.html","webpack:///./src/app/add-new-submissions/add-new-submissions.component.ts","webpack:///./src/app/add-user/add-user.component.css","webpack:///./src/app/add-user/add-user.component.html","webpack:///./src/app/add-user/add-user.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/edit-requirement/edit-requirement.component.css","webpack:///./src/app/edit-requirement/edit-requirement.component.html","webpack:///./src/app/edit-requirement/edit-requirement.component.ts","webpack:///./src/app/edit-submissions/edit-submissions.component.css","webpack:///./src/app/edit-submissions/edit-submissions.component.html","webpack:///./src/app/edit-submissions/edit-submissions.component.ts","webpack:///./src/app/login/login-service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/manage-client/manage-client.component.css","webpack:///./src/app/manage-client/manage-client.component.html","webpack:///./src/app/manage-client/manage-client.component.ts","webpack:///./src/app/manage-users/manage-users.component.css","webpack:///./src/app/manage-users/manage-users.component.html","webpack:///./src/app/manage-users/manage-users.component.ts","webpack:///./src/app/recruiter-add-new-submissions/recruiter-add-new-submissions.component.css","webpack:///./src/app/recruiter-add-new-submissions/recruiter-add-new-submissions.component.html","webpack:///./src/app/recruiter-add-new-submissions/recruiter-add-new-submissions.component.ts","webpack:///./src/app/recruiter-submissions/recruiter-submissions.component.css","webpack:///./src/app/recruiter-submissions/recruiter-submissions.component.html","webpack:///./src/app/recruiter-submissions/recruiter-submissions.component.ts","webpack:///./src/app/requirements/requirements.component.css","webpack:///./src/app/requirements/requirements.component.html","webpack:///./src/app/requirements/requirements.component.ts","webpack:///./src/app/submission-by-requirement/submission-by-requirement.component.css","webpack:///./src/app/submission-by-requirement/submission-by-requirement.component.html","webpack:///./src/app/submission-by-requirement/submission-by-requirement.component.ts","webpack:///./src/app/submissions/submissions.component.css","webpack:///./src/app/submissions/submissions.component.html","webpack:///./src/app/submissions/submissions.component.ts","webpack:///./src/app/user-register/user-register-service.ts","webpack:///./src/app/user-register/user-register.component.css","webpack:///./src/app/user-register/user-register.component.html","webpack:///./src/app/user-register/user-register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ApiUrl {\r\n\r\n    static BaseUrl = 'http://rameshrasaiyan.com:8080/';\r\n\r\n    static AddCompanyUser = 'rtsUser/user/addCompanyUser';\r\n    static UserLogin = 'rtsUser/user/userLogin';\r\n    static GetAllRequirementsByCompany = 'rtsRequirement/requirement/getAllRequirementByCompany';\r\n    static AddNewRequirement = 'rtsRequirement/requirement/insertRequirement';\r\n    static GetAllUsersForAdmin = 'rtsUser/user/getAllUserForAdmin';\r\n    static AddUser = 'rtsUser/user/addUser';\r\n    static GetAllRequiementsForUser = 'rtsRequirement/requirement/getAllAllocationRequirementForUser';\r\n    static AddNewSubmission = 'rtsSubmission/submission/newSubmission';\r\n    static UpdateSubmission = 'rtsSubmission/submission/updateSubmission';\r\n    static FileUpload = 'rtsSubmission/submission/fileUpload';\r\n    static GetAllClientsForCompany = 'rtsClient/client/getAllClientForCompany';\r\n    static AddClient = 'rtsClient/client/addClient';\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ApiUrl } from 'src/app/Services/api-url';\nimport { Http, Headers } from '@angular/http';\nimport { Router } from '@angular/router';\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class ClientService {\n    constructor(private http: Http,\n        private router: Router) { }\n\n    addClient(client) {\n        const token = localStorage.getItem('id_token');\n        const headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', token);\n\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.AddClient, client,\n            { headers: headers })\n            .map(res => {\n                const responseToken = res.headers.get('refresh-token');\n                localStorage.setItem('id_token', responseToken);\n                return res.json();\n            });\n    }\n\n    allClients(companyId) {\n        const token = localStorage.getItem('id_token');\n        const headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', token);\n\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.GetAllClientsForCompany, companyId,\n            { headers: headers })\n            .map(res => {\n                const responseToken = res.headers.get('refresh-token');\n                localStorage.setItem('id_token', responseToken);\n                return res.json();\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HideComponentService {\r\n\r\n  public displayComponent: boolean;\r\n  public displayHeaderLogo: boolean;\r\n\r\n  constructor() {\r\n    this.displayComponent = true;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LoggedUserService {\r\n  public loggedUser: any;\r\n\r\n  constructor() {\r\n    this.loggedUser = localStorage.getItem('rts_user');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiUrl } from 'src/app/Services/api-url';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class RequirementsService {\r\n\r\n    constructor(private http: Http,\r\n        private router: Router) { }\r\n\r\n    requirementsDetails(userId) {\r\n        const token = localStorage.getItem('id_token');\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', token);\r\n\r\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.GetAllRequirementsByCompany, userId,\r\n            { headers: headers })\r\n            .map(res => {\r\n                const responseToken = res.headers.get('refresh-token');\r\n                localStorage.setItem('id_token', responseToken);\r\n                return res.json();\r\n            });\r\n    }\r\n\r\n    requirementsDetailsForUser(userId) {\r\n        const token = localStorage.getItem('id_token');\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', token);\r\n\r\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.GetAllRequiementsForUser, userId,\r\n            { headers: headers })\r\n            .map(res => {\r\n                const responseToken = res.headers.get('refresh-token');\r\n                localStorage.setItem('id_token', responseToken);\r\n                return res.json();\r\n            });\r\n    }\r\n\r\n    addRequirements(newRequirement) {\r\n        const token = localStorage.getItem('id_token');\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', token);\r\n\r\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.AddNewRequirement, newRequirement,\r\n            { headers: headers })\r\n            .map(res => {\r\n                const responseToken = res.headers.get('refresh-token');\r\n                localStorage.setItem('id_token', responseToken);\r\n                return res.json();\r\n            });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiUrl } from 'src/app/Services/api-url';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class SubmissionService {\r\n\r\n    constructor(private http: Http,\r\n        private router: Router) { }\r\n\r\n    addSubmission(submission) {\r\n        const token = localStorage.getItem('id_token');\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', token);\r\n\r\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.AddNewSubmission, submission,\r\n            { headers: headers })\r\n            .map(res => {\r\n                const responseToken = res.headers.get('refresh-token');\r\n                localStorage.setItem('id_token', responseToken);\r\n                return res.json();\r\n            });\r\n    }\r\n\r\n    editSubmission(editSubmission) {\r\n        const token = localStorage.getItem('id_token');\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', token);\r\n\r\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.UpdateSubmission, editSubmission,\r\n            { headers: headers })\r\n            .map(res => {\r\n                const responseToken = res.headers.get('refresh-token');\r\n                localStorage.setItem('id_token', responseToken);\r\n                return res.json();\r\n            });\r\n    }\r\n\r\n    uploadFile(upload) {\r\n        const formData = new FormData();\r\n        const headers = new Headers();\r\n        const token = localStorage.getItem('id_token');\r\n        headers.append('Authorization', token);\r\n        for (const file of upload.file) {\r\n            formData.append('file', file);\r\n        }\r\n\r\n        formData.append('submissionId', upload.submissionId);\r\n        formData.append('enteredBy', upload.enteredBy);\r\n\r\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.FileUpload, formData, { headers: headers })\r\n            .map(res => {\r\n                const responseToken = res.headers.get('refresh-token');\r\n                localStorage.setItem('id_token', responseToken);\r\n                return res.json();\r\n            });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiUrl } from 'src/app/Services/api-url';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(private http: Http,\r\n        private router: Router) { }\r\n\r\n    allUsers(userId) {\r\n        const token = localStorage.getItem('id_token');\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', token);\r\n\r\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.GetAllUsersForAdmin, userId,\r\n            { headers: headers })\r\n            .map(res => {\r\n                const responseToken = res.headers.get('refresh-token');\r\n                localStorage.setItem('id_token', responseToken);\r\n                return res.json();\r\n            });\r\n    }\r\n\r\n    addUser(user) {\r\n        const token = localStorage.getItem('id_token');\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', token);\r\n\r\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.AddUser, user,\r\n            { headers: headers })\r\n            .map(res => {\r\n                const responseToken = res.headers.get('refresh-token');\r\n                localStorage.setItem('id_token', responseToken);\r\n                return res.json();\r\n            });\r\n    }\r\n}\r\n","module.exports = \".btn-space {\\n  margin-right: 1em;\\n}\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"addNewClient(myForm)\\\">\\n    <legend class=\\\"header\\\">Add New Client</legend>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\">Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"email\\\" class=\\\"col-sm-2 col-form-label\\\">Email:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" formControlName=\\\"email\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"phoneNumber\\\" class=\\\"col-sm-2 col-form-label\\\">Phone Number:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phoneNumber\\\" formControlName=\\\"phoneNumber\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"clientContactName\\\" class=\\\"col-sm-2 col-form-label\\\">Contact Person Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"clientContactName\\\" formControlName=\\\"clientContactName\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"clientContactEmail\\\" class=\\\"col-sm-2 col-form-label\\\">Contact Person Email:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"clientContactEmail\\\" formControlName=\\\"clientContactEmail\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"clientContactNumber\\\" class=\\\"col-sm-2 col-form-label\\\">Contact Person Number:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"clientContactNumber\\\" formControlName=\\\"clientContactNumber\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-btn-container\\\">\\n      <button class=\\\"btn btn-default btn-space\\\" type=\\\"submit\\\">Add Client</button>\\n      <a [routerLink]=\\\"[ '/manage-client']\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { ClientService } from '../Services/client.service';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css'],\n  providers: [LoggedUserService]\n})\nexport class AddClientComponent implements OnInit {\n\n  userType: any;\n  rtsUser: any;\n  rtsUserId: any;\n  rtsCompanyId: any;\n\n  public myForm: FormGroup;\n  constructor(\n    private loggedUser: LoggedUserService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private router: Router,\n    private clientService: ClientService\n  ) {\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n    this.rtsCompanyId = this.rtsUser.companyId;\n  }\n\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      clientContactName: ['', Validators.required],\n      clientContactEmail: ['', Validators.required],\n      clientContactNumber: ['', Validators.required]\n    });\n  }\n\n  addNewClient(form: FormGroup) {\n\n    const client = {\n      name: form.value.name,\n      email: form.value.email,\n      phoneNumber: form.value.phoneNumber,\n      contactPersonName: form.value.clientContactName,\n      contactPersonEmail: form.value.clientContactEmail,\n      contactPersonNumber: form.value.clientContactNumber,\n      enteredBy: this.rtsUserId\n    };\n\n    console.log(client);\n    this.clientService.addClient(client)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.toastr.success('New Client successfully added', '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n            this.router.navigate(['manage-client']);\n\n          } else {\n            this.toastr.error(data.message, '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n          }\n        });\n\n  }\n\n}\n","module.exports = \".btn-space {\\r\\n  margin-right: 1em;\\r\\n}\\r\\n\\r\\ninput[type=checkbox] {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=checkbox]:before {\\r\\n  content: \\\"\\\";\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  width: 18px;\\r\\n  height: 18px;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  border: 2px solid #555555;\\r\\n  border-radius: 3px;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\ninput[type=checkbox]:checked:after {\\r\\n  content: \\\"\\\";\\r\\n  display: block;\\r\\n  width: 7px;\\r\\n  height: 12px;\\r\\n  border: solid rgb(44, 43, 43);\\r\\n  border-width: 0 2px 2px 0;\\r\\n  -webkit-transform: rotate(45deg);\\r\\n  transform: rotate(45deg);\\r\\n  position: absolute;\\r\\n  top: 2px;\\r\\n  left: 6px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"addNewRequirement(myForm)\\\">\\n    <legend class=\\\"header\\\">Add New Requirement</legend>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"positionName\\\" class=\\\"col-sm-2 col-form-label\\\">Position Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"clientName\\\" formControlName=\\\"positionName\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"status\\\" class=\\\"col-sm-2 col-form-label\\\">Status:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"status\\\" formControlName=\\\"status\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"accountName\\\" class=\\\"col-sm-2 col-form-label\\\">Account Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"accountName\\\" formControlName=\\\"accountName\\\" required>\\n      </div>\\n      <!-- <label for=\\\"Bank\\\" class=\\\"col-sm-2 col-form-label\\\">Bank:</label> -->\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bankName\\\" formControlName=\\\"bankName\\\" placeholder=\\\" Enter the Bank Name\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"priority\\\" class=\\\"col-2 col-form-label\\\">Priority:</label>\\n      <div class=\\\"col-4\\\">\\n        <select name=\\\"priority\\\" class=\\\"form-control\\\" formControlName=\\\"priority\\\" required>\\n          <option value=\\\"\\\">Select</option>\\n          <option value=\\\"HIGH\\\">High</option>\\n          <option value=\\\"MEDIUM\\\">Medium</option>\\n          <option value=\\\"CRITICAL\\\">Critical</option>\\n          <option value=\\\"LOW\\\">Low</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"location\\\" class=\\\"col-sm-2 col-form-label\\\">Location:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"location\\\" formControlName=\\\"location\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-sm-2 col-form-label\\\">Requirement Type:</label>\\n      <div *ngFor=\\\"let data of requirementType\\\" (click)=\\\"getCheckedValue($event.target.value);\\\">\\n        <div class=\\\"col-md-6 \\\">\\n          <input type=\\\"checkbox\\\" formControlName=\\\"requirementType\\\" [value]=\\\"data.value\\\">{{data.name}}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"positionsCount\\\" class=\\\"col-sm-2 col-form-label \\\">No.of Positions:</label>\\n      <div class=\\\"col-sm-4 \\\">\\n        <input type=\\\"number \\\" class=\\\"form-control\\\" name=\\\"positionsCount\\\" maxlength=\\\"3\\\" formControlName=\\\"positionsCount\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"immigrationRequirement\\\" class=\\\"col-sm-2 col-form-label\\\">Immigration Requirement:</label>\\n      <div class=\\\"col-sm-4 \\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"immigrationRequiremen\\\" formControlName=\\\"immigrationRequirement\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"clientName\\\" class=\\\"col-sm-2 col-form-label\\\">Client:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <select name=\\\"clientName\\\" class=\\\"form-control\\\" formControlName=\\\"clientName\\\" required>\\n          <option value=\\\"\\\">Select</option>\\n          <option *ngFor=\\\"let client of clients\\\" value=\\\"{{client.clientId}}\\\">{{client.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"allocation\\\" class=\\\"col-sm-2 col-form-label\\\">Allocation:</label>\\n      <div class=\\\"col-sm-4 \\\">\\n        <select name=\\\"role\\\" class=\\\"form-control\\\" formControlName=\\\"allocation\\\" required>\\n          <option value=\\\"\\\">Select</option>\\n          <option *ngFor=\\\"let user of userDetails\\\" value=\\\"{{user.userId}}\\\">{{user.firstName}} {{user.lastName}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"team\\\" class=\\\"col-sm-2 col-form-label\\\">Team:</label>\\n      <div class=\\\"col-sm-4 \\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"team\\\" formControlName=\\\"team\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"comments\\\" class=\\\"col-sm-2 col-form-label\\\">Comments:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <textarea name=\\\"comments\\\" class=\\\"form-control\\\" formControlName=\\\"comments\\\" ngModel required>Type Your Comments</textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-btn-container\\\">\\n      <button class=\\\"btn btn-default btn-space\\\" type=\\\"submit\\\">Add Requirement</button>\\n      <a [routerLink]=\\\"[ '/requirements']\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { RequirementsService } from '../Services/requirements.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../Services/user.service';\nimport { ClientService } from '../Services/client.service';\n\n@Component({\n  selector: 'app-add-new-requirement',\n  templateUrl: './add-new-requirement.component.html',\n  styleUrls: ['./add-new-requirement.component.css'],\n  providers: [LoggedUserService]\n})\nexport class AddNewRequirementComponent implements OnInit {\n\n  public myForm: FormGroup;\n  rtsUser: any;\n  rtsUserId: any;\n  requirementType: any;\n  userDetails: any;\n  newRequirement: any;\n  requirementByUser: any;\n  rtsCompanyId: any;\n  clients: any;\n\n  constructor(\n    private loggedUser: LoggedUserService,\n    private requirementService: RequirementsService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private router: Router,\n    private userService: UserService,\n    private clientService: ClientService\n  ) {\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n    this.rtsCompanyId = this.rtsUser.companyId;\n    this.requirementByUser = [];\n    this.requirementType = [\n      { 'name': 'C2C', 'value': 'c2c' },\n      { 'name': 'FTE', 'value': 'fte' },\n      { 'name': 'TBD', 'value': 'tbd' }\n    ];\n  }\n\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      positionName: ['', Validators.required],\n      clientName: [''],\n      accountName: [''],\n      status: [''],\n      bankName: ['', Validators.required],\n      priority: [''],\n      location: [''],\n      requirementType: ['', Validators.required],\n      positionsCount: [''],\n      immigrationRequirement: [''],\n      allocation: [''],\n      team: [''],\n      comments: [''],\n    });\n    this.getAllUsers();\n    this.getAllClients();\n  }\n\n  getAllClients() {\n    const companyId = {\n      companyId: this.rtsCompanyId\n    };\n\n    this.clientService.allClients(companyId)\n      .subscribe(\n        data => {\n          if (data.success) {\n            this.clients = data.clients;\n          }\n        });\n\n  }\n\n  getAllUsers() {\n    const userId = {\n      enteredBy: this.rtsUserId\n    };\n\n    console.log(userId);\n    this.userService.allUsers(userId)\n      .subscribe(\n        data => {\n          if (data.success) {\n            this.userDetails = data.users;\n          }\n        });\n\n  }\n\n  getCheckedValue(event) {\n    console.log(event);\n    if (event !== undefined) {\n      if (this.requirementByUser.indexOf(event) === -1) {\n        this.requirementByUser.push(event);\n      }\n    }\n    console.log(this.requirementByUser);\n  }\n\n  addNewRequirement(form: FormGroup) {\n    console.log(form.value.requirementType);\n\n    if (form.value.allocation === '') {\n      const requirement = {\n        positionName: form.value.positionName,\n        accountName: form.value.accountName,\n        priority: form.value.priority,\n        location: form.value.location,\n        requirementType: [\n        ],\n        positionCount: form.value.positionsCount,\n        status: form.value.status,\n        enteredBy: this.rtsUserId,\n        clientId: form.value.clientName\n      };\n      this.newRequirement = requirement;\n    } else {\n      const requirement = {\n        positionName: form.value.positionName,\n        accountName: form.value.accountName,\n        priority: form.value.priority,\n        location: form.value.location,\n        requirementType: [\n        ],\n        positionCount: form.value.positionsCount,\n        status: form.value.status,\n        enteredBy: this.rtsUserId,\n        clientId: form.value.clientName,\n        allocationUserId: form.value.allocation\n      };\n      this.newRequirement = requirement;\n    }\n    console.log(this.newRequirement);\n\n    this.requirementService.addRequirements(this.newRequirement)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.toastr.success('New requirement successfully added', '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n            this.router.navigate(['requirements']);\n\n          } else {\n            this.toastr.error(data.message, '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n          }\n        });\n  }\n\n}\n","module.exports = \".btn-space {\\r\\n  margin-right: 1em;\\r\\n}\\r\\n\\r\\n.fileContainer {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.fileContainer [type=file] {\\r\\n  cursor: inherit;\\r\\n  display: blck;\\r\\n  font-size: 999px;\\r\\n  filter: alpha(opacity=0);\\r\\n  min-height: 100%;\\r\\n  min-width: 100%;\\r\\n  opacity: 0;\\r\\n  position: absolute;\\r\\n  right: 0;\\r\\n  text-align: right;\\r\\n  top: 0;\\r\\n}\\r\\n\\r\\n.panel {\\r\\n  padding: .5em;\\r\\n  background: rgb(241, 237, 237);\\r\\n  color: blue;\\r\\n  height: 30px;\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\n.material-icons {\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\r\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"addNewSubmission(myForm)\\\">\\r\\n    <legend class=\\\"header\\\">Add New Submission</legend>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"requirements\\\" class=\\\"col-sm-2 col-form-label\\\">Requirements:</label>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <select name=\\\"requirements\\\" class=\\\"form-control\\\" formControlName=\\\"requirements\\\" required>\\r\\n          <option value=\\\"\\\">Select</option>\\r\\n          <option *ngFor=\\\"let require of requirementsDetails\\\" value=\\\"{{require.requirementId}}\\\">{{require.positionName}} {{require.client.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"candidateName\\\" class=\\\"col-sm-2 col-form-label\\\">Candidate Name:</label>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"candidateName\\\" formControlName=\\\"candidateName\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"location\\\" class=\\\"col-sm-2 col-form-label\\\">Location:</label>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"location\\\" formControlName=\\\"location\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"rate\\\" class=\\\"col-sm-2 col-form-label\\\">Rate:</label>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"rate\\\" formControlName=\\\"rate\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"availability\\\" class=\\\"col-sm-2 col-form-label\\\">Availability:</label>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"availability\\\" formControlName=\\\"availability\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"technology\\\" class=\\\"col-sm-2 col-form-label\\\">Technology:</label>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"technology\\\" formControlName=\\\"technology\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"accountName\\\" class=\\\"col-sm-2 col-form-label\\\">Account Name:</label>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"accountName\\\" formControlName=\\\"accountName\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"workLocation\\\" class=\\\"col-sm-2 col-form-label\\\">Work Location:</label>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"workLocation\\\" formControlName=\\\"workLocation\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div>\\r\\n        <label class=\\\"fileContainer\\\">\\r\\n          <button class=\\\"btn btn-secondary\\\">\\r\\n            Attach Files</button>\\r\\n          <input type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" multiple/>\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class=\\\"pb-2\\\" *ngFor=\\\"let file of getFiles\\\">\\r\\n        <a class=\\\"panel\\\">{{file.name}}\\r\\n        </a>\\r\\n        <a class=\\\"btn\\\" (click)=\\\"removeFile(file)\\\">\\r\\n          <i class=\\\"material-icons\\\">\\r\\n            clear\\r\\n          </i>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-btn-container\\\">\\r\\n      <button class=\\\"btn btn-default btn-space\\\" type=\\\"submit\\\">Add Submission</button>\\r\\n      <a [routerLink]=\\\"[ '/submissions']\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RequirementsService } from '../Services/requirements.service';\nimport { SubmissionService } from '../Services/submission.service';\n\n@Component({\n  selector: 'app-add-new-submissions',\n  templateUrl: './add-new-submissions.component.html',\n  styleUrls: ['./add-new-submissions.component.css'],\n  providers: [LoggedUserService]\n})\nexport class AddNewSubmissionsComponent implements OnInit {\n\n  public myForm: FormGroup;\n  rtsUser: any;\n  rtsUserId: any;\n  requirementsDetails: any;\n  files: any;\n  getFiles: any;\n  rtsCompanyId: any;\n\n  constructor(\n    private loggedUser: LoggedUserService,\n    private requirementService: RequirementsService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private submissionService: SubmissionService,\n    private router: Router\n  ) {\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n    this.rtsCompanyId = this.rtsUser.companyId;\n    this.getFiles = [];\n  }\n\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      requirements: ['', Validators.required],\n      candidateName: [''],\n      accountName: [''],\n      location: [''],\n      rate: ['', Validators.required],\n      availability: [''],\n      technology: [''],\n      workLocation: ['']\n    });\n    this.getAllRequirements();\n  }\n\n  getAllRequirements() {\n    const userId = {\n      companyId: this.rtsCompanyId\n    };\n\n    this.requirementService.requirementsDetails(userId)\n      .subscribe(\n        data => {\n          if (data.success) {\n            this.requirementsDetails = data.requirements;\n          }\n        });\n  }\n\n  fileChangeEvent(event: any) {\n    this.files = event.target.files;\n    for (const file of this.files) {\n      this.getFiles.push(file);\n    }\n  }\n\n  removeFile(file) {\n    const clear = this.getFiles.indexOf(file);\n    this.getFiles.splice(clear, 1);\n  }\n\n\n  addNewSubmission(form: FormGroup) {\n\n    const submission = {\n      requirementId: form.value.requirements,\n      candidateName: form.value.candidateName,\n      location: form.value.location,\n      accountName: form.value.accountName,\n      rate: form.value.rate,\n      availability: form.value.availability,\n      technology: form.value.technology,\n      workLocation: form.value.workLocation,\n      enteredBy: this.rtsUserId,\n    };\n\n    console.log(submission);\n\n    this.submissionService.addSubmission(submission)\n      .subscribe(\n        data => {\n          if (data.success) {\n\n            if (this.getFiles.length > 0) {\n              const upload = {\n                file: this.getFiles,\n                submissionId: data.submission.submissionId,\n                enteredBy: this.rtsUserId\n              };\n              this.submissionService.uploadFile(upload).subscribe(\n                file => {\n                  if (file.success) {\n                    this.toastr.success(file.message, '', {\n                      positionClass: 'toast-top-center',\n                      timeOut: 3000,\n                    });\n                  } else {\n                    this.toastr.error(file.message, '', {\n                      positionClass: 'toast-top-center',\n                      timeOut: 3000,\n                    });\n                  }\n                });\n            }\n            this.toastr.success('New Submission Successfully added', '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n            this.router.navigate(['submissions']);\n\n          } else {\n            this.toastr.error(data.message, '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n          }\n        });\n  }\n\n}\n","module.exports = \".btn-space {\\r\\n  margin-right: 1em;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"addNewUser(myForm)\\\">\\n    <legend class=\\\"header\\\">Add New User</legend>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"firstName\\\" class=\\\"col-sm-2 col-form-label\\\">First Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" formControlName=\\\"firstName\\\" required>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"lastName\\\" class=\\\"col-sm-2 col-form-label\\\">Last Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" formControlName=\\\"lastName\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"email\\\" class=\\\"col-sm-2 col-form-label\\\">Email:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" formControlName=\\\"email\\\" required>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"role\\\" class=\\\"col-sm-2 col-form-label\\\">Role:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <select name=\\\"role\\\" class=\\\"form-control\\\" formControlName=\\\"role\\\" required>\\n          <option value=\\\"\\\">Select</option>\\n          <option *ngFor=\\\"let role of userType\\\" value=\\\"{{role.value}}\\\">{{role.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"userPassword\\\" class=\\\"col-sm-2 col-form-label\\\">Password:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"userPassword\\\" formControlName=\\\"userPassword\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"confirmPassword\\\" class=\\\"col-sm-2 col-form-label\\\">Confim Password :</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmPassword\\\" formControlName=\\\"confirmPassword\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-btn-container\\\">\\n      <button class=\\\"btn btn-default btn-space\\\" type=\\\"submit\\\">Add User</button>\\n      <a [routerLink]=\\\"[ '/manage-users']\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { UserService } from '../Services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css'],\n  providers: [LoggedUserService]\n})\nexport class AddUserComponent implements OnInit {\n\n  userType: any;\n  rtsUser: any;\n  rtsUserId: any;\n\n  public myForm: FormGroup;\n  constructor(\n    private loggedUser: LoggedUserService,\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private toastr: ToastrService,\n    private router: Router\n  ) {\n    this.userType = [\n      // { 'name': 'Manager', 'value': 'MGR' },\n      { 'name': 'Team Leader', 'value': 'TL' },\n      { 'name': 'User', 'value': 'USER' },\n      { 'name': 'Recruiter', 'value': 'RECRUITER' },\n    ];\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n  }\n\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      role: ['', Validators.required],\n      userPassword: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n\n  addNewUser(form: FormGroup) {\n\n    if (form.value.userPassword !== form.value.confirmPassword) {\n      this.toastr.error('Password and confirmPassword does not match', '', {\n        positionClass: 'toast-top-center',\n        timeOut: 3000,\n      });\n      return false;\n    }\n\n    const user = {\n      firstName: form.value.firstName,\n      lastName: form.value.lastName,\n      email: form.value.email,\n      role: form.value.role,\n      password: form.value.userPassword,\n      enteredBy: this.rtsUserId\n    };\n    console.log(user);\n    this.userService.addUser(user)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.toastr.success('New User successfully added', '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n            this.router.navigate(['manage-users']);\n\n          } else {\n            this.toastr.error(data.message, '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n          }\n        });\n\n  }\n\n}\n","import { NgModule, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserRegisterComponent } from './user-register/user-register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RequirementsComponent } from './requirements/requirements.component';\nimport { SubmissionsComponent } from './submissions/submissions.component';\nimport { AddNewRequirementComponent } from './add-new-requirement/add-new-requirement.component';\nimport { EditRequirementComponent } from './edit-requirement/edit-requirement.component';\nimport { AddNewSubmissionsComponent } from './add-new-submissions/add-new-submissions.component';\nimport { ManageUsersComponent } from './manage-users/manage-users.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { RecruiterSubmissionsComponent } from './recruiter-submissions/recruiter-submissions.component';\nimport { RecruiterAddNewSubmissionsComponent } from './recruiter-add-new-submissions/recruiter-add-new-submissions.component';\nimport { SubmissionByRequirementComponent } from './submission-by-requirement/submission-by-requirement.component';\nimport { EditSubmissionsComponent } from './edit-submissions/edit-submissions.component';\nimport { ManageClientComponent } from './manage-client/manage-client.component';\nimport { AddClientComponent } from './add-client/add-client.component';\n\n\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: UserRegisterComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'requirements', component: RequirementsComponent },\n  { path: 'submissions', component: SubmissionsComponent },\n  { path: 'add-new-requirement', component: AddNewRequirementComponent },\n  { path: 'edit-requirement/:id', component: EditRequirementComponent },\n  { path: 'add-new-submission', component: AddNewSubmissionsComponent },\n  { path: 'manage-users', component: ManageUsersComponent },\n  { path: 'add-user', component: AddUserComponent },\n  { path: 'recruiter-submissions', component: RecruiterSubmissionsComponent },\n  { path: 'recruiter-add-new-submissions', component: RecruiterAddNewSubmissionsComponent },\n  { path: 'submission-by-requirement/:id', component: SubmissionByRequirementComponent },\n  { path: 'edit-submissions/:id', component: EditSubmissionsComponent },\n  { path: 'manage-client', component: ManageClientComponent },\n  { path: 'add-client', component: AddClientComponent },\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".heading {\\r\\n  padding-left: 4em;\\r\\n  padding-top: 1em;\\r\\n  padding-bottom: .5em;\\r\\n  color: rgb(92, 80, 80)\\r\\n}\\r\\n\\r\\n.nav-taps {\\r\\n  background-color: #3a3535;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  color: rgb(229, 238, 247);\\r\\n}\\r\\n\\r\\n.nav-item-logout {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"header-wrapper\\\">\\n  <h1 class=\\\"heading\\\">Selsoft RTS</h1>\\n</div>\\n<div *ngIf=\\\"displayComponent\\\">\\n  <div *ngIf=\\\"userRole ==='ADMIN'\\\">\\n    <ul class=\\\"nav nav-taps\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/requirements']\\\">Requirements</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/submissions']\\\">Submissions</a>\\n      </li>\\n      <!-- <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\">Interviews</a>\\n      </li> -->\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/manage-users']\\\">Manage Users</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/manage-client']\\\">Manage Client</a>\\n      </li>\\n      <li class=\\\"nav-item-logout\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"\\\" (click)=\\\"onLogout();\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div *ngIf=\\\"userRole ==='TL'\\\">\\n    <ul class=\\\"nav nav-taps\\\">\\n      <!-- <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/requirements']\\\">Requirements</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/submissions']\\\">Submissions</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\">Interviews</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/manage-users']\\\">Manage Users</a>\\n        </li> -->\\n      <li class=\\\"nav-item-logout\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"\\\" (click)=\\\"onLogout();\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div *ngIf=\\\"userRole ==='RECRUITER'\\\">\\n    <ul class=\\\"nav nav-taps\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/requirements']\\\">Requirements</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/recruiter-submissions']\\\">Submissions</a>\\n      </li>\\n      <li class=\\\"nav-item-logout\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"\\\" (click)=\\\"onLogout();\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, DoCheck } from '@angular/core';\nimport { LoggedUserService } from './Services/logged-user.service';\nimport { HideComponentService } from './Services/hide-component.service';\nimport { Router } from '@angular/router';\nimport { LoginService } from './login/login-service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [LoggedUserService]\n})\nexport class AppComponent implements DoCheck {\n  displayComponent: boolean;\n  rtsUser: any;\n  userRole: any;\n\n  constructor(private loggedUser: LoggedUserService,\n    private hideComponent: HideComponentService,\n    private router: Router,\n    private loginService: LoginService,\n    private toastr: ToastrService\n  ) {\n    this.displayComponent = this.hideComponent.displayComponent;\n  }\n\n  ngDoCheck() {\n    this.displayComponent = this.hideComponent.displayComponent;\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    if (this.rtsUser) {\n      this.userRole = this.rtsUser.role;\n    }\n  }\n\n  onLogout() {\n    this.loginService.logout();\n    this.toastr.success('You are logged out', '', {\n      positionClass: 'toast-top-center',\n      timeOut: 3000,\n    });\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { UserRegisterComponent } from './user-register/user-register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RegisterService } from './user-register/user-register-service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginService } from './login/login-service';\nimport { LoggedUserService } from './Services/logged-user.service';\nimport { RequirementsComponent } from './requirements/requirements.component';\nimport { SubmissionsComponent } from './submissions/submissions.component';\nimport { HideComponentService } from './Services/hide-component.service';\nimport { RequirementsService } from './Services/requirements.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDatepickerModule, MatSnackBarModule, MatNativeDateModule, matSnackBarAnimations, MatCheckboxModule } from '@angular/material';\nimport { MatFormFieldModule, MatSlideToggleModule, MatIconModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material';\nimport { NativeDateModule } from '@angular/material';\nimport { AddNewRequirementComponent } from './add-new-requirement/add-new-requirement.component';\nimport { DatePipe } from '@angular/common';\nimport { EditRequirementComponent } from './edit-requirement/edit-requirement.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { AddNewSubmissionsComponent } from './add-new-submissions/add-new-submissions.component';\nimport { ManageUsersComponent } from './manage-users/manage-users.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { UserService } from './Services/user.service';\nimport { SubmissionService } from './Services/submission.service';\nimport { RecruiterSubmissionsComponent } from './recruiter-submissions/recruiter-submissions.component';\nimport { RecruiterAddNewSubmissionsComponent } from './recruiter-add-new-submissions/recruiter-add-new-submissions.component';\nimport { SubmissionByRequirementComponent } from './submission-by-requirement/submission-by-requirement.component';\nimport { EditSubmissionsComponent } from './edit-submissions/edit-submissions.component';\nimport { ClientService } from './Services/client.service';\nimport { ManageClientComponent } from './manage-client/manage-client.component';\nimport { AddClientComponent } from './add-client/add-client.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserRegisterComponent,\n    DashboardComponent,\n    RequirementsComponent,\n    SubmissionsComponent,\n    AddNewRequirementComponent,\n    EditRequirementComponent,\n    AddNewSubmissionsComponent,\n    ManageUsersComponent,\n    AddUserComponent,\n    RecruiterSubmissionsComponent,\n    RecruiterAddNewSubmissionsComponent,\n    SubmissionByRequirementComponent,\n    EditSubmissionsComponent,\n    ManageClientComponent,\n    AddClientComponent,\n     ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatCheckboxModule,\n    NativeDateModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    Ng2SearchPipeModule,\n    ToastrModule.forRoot(),\n    MatIconModule\n  ],\n  providers: [\n    RegisterService,\n    LoginService,\n    LoggedUserService,\n    HideComponentService,\n    RequirementsService,\n    UserService,\n    ClientService,\n    SubmissionService,\n    ToastrService,\n    DatePipe],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".btn-space {\\r\\n    margin-right: 2em;\\r\\n}\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"updateRequirement(myForm)\\\">\\n    <legend class=\\\"header\\\">Edit Requirement</legend>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"createdDate\\\" class=\\\"col-sm-2 col-form-label\\\">Created Date:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"createdDate\\\" formControlName=\\\"createdDate\\\" value=\\\"{{requirementCreatedDate}}\\\"\\n          readonly>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"positionName\\\" class=\\\"col-sm-2 col-form-label\\\">Position Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"positionName\\\" formControlName=\\\"positionName\\\" value=\\\"{{selectedRequirement.positionName}}\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement.client\\\">\\n      <label for=\\\"clientName\\\" class=\\\"col-sm-2 col-form-label\\\">Client Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <select name=\\\"clientName\\\" class=\\\"form-control\\\" formControlName=\\\"clientName\\\" ngModel=\\\"{{selectedRequirement.client.clientId}}\\\"\\n          required>\\n          <option value=\\\"\\\">Select</option>\\n          <option *ngFor=\\\"let client of clients\\\" value=\\\"{{client.clientId}}\\\">{{client.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"status\\\" class=\\\"col-sm-2 col-form-label\\\">Status:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"status\\\" formControlName=\\\"status\\\" value=\\\"{{selectedRequirement.status}}\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"accountName\\\" class=\\\"col-sm-2 col-form-label\\\">Account Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"accountName\\\" formControlName=\\\"accountName\\\" value=\\\"{{selectedRequirement.accountName}}\\\">\\n      </div>\\n      <!-- <label for=\\\"Bank\\\" class=\\\"col-sm-2 col-form-label\\\">Bank:</label> -->\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bankName\\\" formControlName=\\\"bankName\\\" placeholder=\\\"Bank\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"priority\\\" class=\\\"col-sm-2 col-form-label\\\">Priority:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"priority\\\" formControlName=\\\"priority\\\" value=\\\"{{selectedRequirement.priority}}\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"location\\\" class=\\\"col-sm-2 col-form-label\\\">Location:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"location\\\" formControlName=\\\"location\\\" value=\\\"{{selectedRequirement.location}}\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"requirementType\\\" class=\\\"col-sm-2 col-form-label\\\">Requirement Type:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"requirementType\\\" formControlName=\\\"requirementType\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"positionsCount\\\" class=\\\"col-sm-2 col-form-label\\\">No.of Positions:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"positionsCount\\\" formControlName=\\\"positionsCount\\\" value=\\\"{{selectedRequirement.positionCount}}\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"immigrationRequirement\\\" class=\\\"col-sm-2 col-form-label\\\">Immigration Requirement:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"immigrationRequirement\\\" formControlName=\\\"immigrationRequirement\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement.client\\\">\\n      <label for=\\\"clientContactName\\\" class=\\\"col-sm-2 col-form-label\\\">Client Contact:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"clientContactName\\\" formControlName=\\\"clientContactName\\\" value=\\\"{{selectedRequirement.client.name}}\\\">\\n      </div>\\n      <!-- <label for=\\\"clientContactEmail\\\" class=\\\"col-sm-2 col-form-label\\\">Client Contact Email:</label> -->\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"clientContactEmail\\\" formControlName=\\\"clientContactEmail\\\" value=\\\"{{selectedRequirement.client.email}}\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"allocation\\\" class=\\\"col-sm-2 col-form-label\\\">Allocation:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <select name=\\\"allocation\\\" class=\\\"form-control\\\" formControlName=\\\"allocation\\\" required ngModel=\\\"{{selectedRequirement.allocationUserId}}\\\">\\n          <option value=\\\"\\\">select</option>\\n          <option *ngFor=\\\"let user of userDetails\\\" value=\\\"{{user.userId}}\\\">{{user.firstName}} {{user.lastName}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"team\\\" class=\\\"col-sm-2 col-form-label\\\">Team:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"team\\\" formControlName=\\\"team\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedRequirement\\\">\\n      <label for=\\\"comments\\\" class=\\\"col-sm-2 col-form-label\\\">Comments:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <textarea name=\\\"comments\\\" class=\\\"form-control\\\" formControlName=\\\"comments\\\" ngModel required>Type Your Comments</textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-btn-container\\\">\\n      <button class=\\\"btn btn-default btn-space\\\" type=\\\"submit\\\">Update Requirement</button>\\n      <button [routerLink]=\\\"['/submission-by-requirement', requirementId]\\\" class=\\\"btn btn-default\\\" type=\\\"submit\\\">Submissions</button>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RequirementsService } from '../Services/requirements.service';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport * as _ from 'underscore';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { UserService } from '../Services/user.service';\nimport { ClientService } from '../Services/client.service';\n\n@Component({\n  selector: 'app-edit-requirement',\n  templateUrl: './edit-requirement.component.html',\n  styleUrls: ['./edit-requirement.component.css'],\n  providers: [LoggedUserService]\n})\nexport class EditRequirementComponent implements OnInit {\n\n  rtsUser: any;\n  rtsUserId: any;\n  requirementId: any;\n  requirements: any;\n  selectedRequirement: any;\n  requirementCreatedDate: any;\n  userDetails: any;\n  rtsCompanyId: any;\n  clients: any;\n\n  public myForm: FormGroup;\n\n  constructor(private loggedUser: LoggedUserService,\n    private requirementService: RequirementsService,\n    private activatedRoute: ActivatedRoute,\n    private userService: UserService,\n    private clientService: ClientService,\n    private formBuilder: FormBuilder\n  ) {\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n    this.rtsCompanyId = this.rtsUser.companyId;\n    this.selectedRequirement = {};\n  }\n\n  ngOnInit() {\n\n    this.activatedRoute.params\n      .subscribe((params: Params) => {\n        this.requirementId = params['id'];\n      });\n\n    this.myForm = this.formBuilder.group({\n      createdDate: ['', [Validators.required, Validators.minLength(3)]],\n      positionName: ['', Validators.required],\n      status: [''],\n      clientName: [''],\n      accountName: [''],\n      bankName: ['', Validators.required],\n      priority: [''],\n      location: [''],\n      requirementType: ['', Validators.required],\n      positionsCount: [''],\n      immigrationRequirement: [''],\n      clientContactName: [''],\n      clientContactEmail: ['', Validators.required],\n      allocation: [''],\n      team: [''],\n      comments: [''],\n    });\n    this.getAllRequirements();\n    this.getAllUsers();\n    this.getAllClients();\n  }\n\n  getAllRequirements() {\n\n    const userId = {\n      companyId: this.rtsCompanyId\n    };\n\n    this.requirementService.requirementsDetails(userId)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.requirements = data.requirements;\n            this.selectedRequirement = _.findWhere(this.requirements, { requirementId: this.requirementId });\n            this.requirementCreatedDate = moment(this.selectedRequirement.createdOn).format('MMM D, Y');\n            console.log(this.selectedRequirement);\n          }\n        });\n  }\n\n  getAllUsers() {\n    const userId = {\n      enteredBy: this.rtsUserId\n    };\n\n    console.log(userId);\n    this.userService.allUsers(userId)\n      .subscribe(\n        data => {\n          if (data.success) {\n            this.userDetails = data.users;\n          }\n        });\n\n  }\n\n  getAllClients() {\n    const companyId = {\n      companyId: this.rtsCompanyId\n    };\n\n    this.clientService.allClients(companyId)\n      .subscribe(\n        data => {\n          if (data.success) {\n            this.clients = data.clients;\n          }\n        });\n\n  }\n\n  updateRequirement(form: FormGroup) {\n    console.log(form.value);\n  }\n\n}\n","module.exports = \".btn-space {\\n  margin-right: 1em;\\n}\\n\\n.fileContainer {\\n  overflow: hidden;\\n  position: relative;\\n}\\n\\n.fileContainer [type=file] {\\n  cursor: inherit;\\n  display: blck;\\n  font-size: 999px;\\n  filter: alpha(opacity=0);\\n  min-height: 100%;\\n  min-width: 100%;\\n  opacity: 0;\\n  position: absolute;\\n  right: 0;\\n  text-align: right;\\n  top: 0;\\n}\\n\\n.panel {\\n  padding: .5em;\\n  background: rgb(241, 237, 237);\\n  color: blue;\\n  height: 30px;\\n  width: 300px;\\n}\\n\\n.material-icons {\\n  color: red;\\n}\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"updateSubmission(myForm)\\\">\\n    <legend class=\\\"header\\\">Edit Submission</legend>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedSubmission\\\">\\n      <label for=\\\"requirements\\\" class=\\\"col-sm-2 col-form-label\\\">Requirements:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <select name=\\\"requirements\\\" class=\\\"form-control\\\" formControlName=\\\"requirements\\\" ngModel=\\\"{{selectedSubmission.requirementId}}\\\"\\n          required>\\n          <option value=\\\"\\\">Select</option>\\n          <option *ngFor=\\\"let require of requirementsDetails\\\" value=\\\"{{require.requirementId}}\\\">{{require.positionName}} {{require.client.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedSubmission\\\">\\n      <label for=\\\"candidateName\\\" class=\\\"col-sm-2 col-form-label\\\">Candidate Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"candidateName\\\" formControlName=\\\"candidateName\\\" ngModel=\\\"{{selectedSubmission.candidateName}}\\\"\\n          required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedSubmission\\\">\\n      <label for=\\\"location\\\" class=\\\"col-sm-2 col-form-label\\\">Location:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"location\\\" formControlName=\\\"location\\\" ngModel=\\\"{{selectedSubmission.location}}\\\"\\n          required>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedSubmission\\\">\\n      <label for=\\\"rate\\\" class=\\\"col-sm-2 col-form-label\\\">Rate:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"rate\\\" formControlName=\\\"rate\\\" ngModel=\\\"{{selectedSubmission.rate}}\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedSubmission\\\">\\n      <label for=\\\"availability\\\" class=\\\"col-sm-2 col-form-label\\\">Availability:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"availability\\\" formControlName=\\\"availability\\\" ngModel=\\\"{{selectedSubmission.availability}}\\\"\\n          required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedSubmission\\\">\\n      <label for=\\\"technology\\\" class=\\\"col-sm-2 col-form-label\\\">Technology:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"technology\\\" formControlName=\\\"technology\\\" ngModel=\\\"{{selectedSubmission.technology}}\\\"\\n          required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedSubmission\\\">\\n      <label for=\\\"accountName\\\" class=\\\"col-sm-2 col-form-label\\\">Account Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"accountName\\\" formControlName=\\\"accountName\\\" ngModel=\\\"{{selectedSubmission.accountName}}\\\"\\n          required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\" *ngIf=\\\"selectedSubmission\\\">\\n      <label for=\\\"workLocation\\\" class=\\\"col-sm-2 col-form-label\\\">Work Location:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"workLocation\\\" formControlName=\\\"workLocation\\\" ngModel=\\\"{{selectedSubmission.workLocation}}\\\"\\n          required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <div>\\n        <label class=\\\"fileContainer\\\">\\n          <button class=\\\"btn btn-secondary\\\">\\n            Attach Files</button>\\n          <input type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" multiple/>\\n        </label>\\n      </div>\\n      <div class=\\\"pb-2\\\" *ngFor=\\\"let file of getFiles\\\">\\n        <a class=\\\"panel\\\">{{file.name}}\\n        </a>\\n        <a class=\\\"btn\\\" (click)=\\\"removeFile(file)\\\">\\n          <i class=\\\"material-icons\\\">\\n            clear\\n          </i>\\n        </a>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" *ngIf=\\\"selectedSubmission\\\">\\n      <div class=\\\"pb-2\\\" *ngFor=\\\"let media of selectedSubmission.mediaFiles\\\">\\n        <a class=\\\"panel\\\">{{media.fileName}}\\n        </a>\\n        <a class=\\\"btn\\\" (click)=\\\"removeUploadedFile(media)\\\">\\n          <i class=\\\"material-icons\\\">\\n            clear\\n          </i>\\n        </a>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-btn-container\\\">\\n      <button class=\\\"btn btn-default btn-space\\\" type=\\\"submit\\\">Update Submission</button>\\n      <a [routerLink]=\\\"[ '/submissions']\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { RequirementsService } from '../Services/requirements.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport * as _ from 'underscore';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SubmissionService } from '../Services/submission.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-submissions',\n  templateUrl: './edit-submissions.component.html',\n  styleUrls: ['./edit-submissions.component.css'],\n  providers: [LoggedUserService]\n})\nexport class EditSubmissionsComponent implements OnInit {\n  public myForm: FormGroup;\n  rtsUser: any;\n  rtsUserId: any;\n  rtsCompanyId: any;\n  submissionId: any;\n  selectedSubmission: any;\n  requirementsDetails: any;\n  getFiles: any;\n  files: any;\n  deletedMediaFiles: any;\n\n  constructor(private loggedUser: LoggedUserService,\n    private requirementService: RequirementsService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private submissionService: SubmissionService,\n    private router: Router\n  ) {\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n    this.rtsCompanyId = this.rtsUser.companyId;\n    this.getFiles = [];\n    this.deletedMediaFiles = [];\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params\n      .subscribe((params: Params) => {\n        this.submissionId = params['id'];\n      });\n\n    this.myForm = this.formBuilder.group({\n      requirements: ['', Validators.required],\n      candidateName: [''],\n      accountName: [''],\n      location: [''],\n      rate: ['', Validators.required],\n      availability: [''],\n      technology: [''],\n      workLocation: ['']\n    });\n    this.getAllRequirements();\n  }\n\n  getAllRequirements() {\n\n    const userId = {\n      companyId: this.rtsCompanyId\n    };\n\n    this.requirementService.requirementsDetails(userId)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.requirementsDetails = data.requirements;\n            for (const sub of this.requirementsDetails) {\n              const submission = _.findWhere(sub.submissions, { submissionId: this.submissionId });\n              if (submission !== undefined) {\n                this.selectedSubmission = submission;\n              }\n            }\n            console.log(this.selectedSubmission);\n          }\n        });\n  }\n\n  fileChangeEvent(event: any) {\n    this.files = event.target.files;\n    for (const file of this.files) {\n      this.getFiles.push(file);\n    }\n    console.log(this.getFiles);\n  }\n\n  removeFile(file) {\n    const clear = this.getFiles.indexOf(file);\n    this.getFiles.splice(clear, 1);\n  }\n\n  removeUploadedFile(media) {\n    this.deletedMediaFiles.push(media.mediaId);\n    const clear = this.selectedSubmission.mediaFiles.indexOf(media);\n    this.selectedSubmission.mediaFiles.splice(clear, 1);\n  }\n\n\n  updateSubmission(form: FormGroup) {\n\n    const submission = {\n      requirementId: form.value.requirements,\n      candidateName: form.value.candidateName,\n      location: form.value.location,\n      accountName: form.value.accountName,\n      rate: form.value.rate,\n      availability: form.value.availability,\n      technology: form.value.technology,\n      workLocation: form.value.workLocation,\n      enteredBy: this.rtsUserId,\n      submissionId: this.submissionId\n    };\n    const editSubmission = {\n      submission: submission,\n      deletedMediaFiles: this.deletedMediaFiles\n    };\n\n    console.log(editSubmission);\n\n    this.submissionService.editSubmission(editSubmission)\n      .subscribe(\n        data => {\n          if (data.success) {\n\n            if (this.getFiles.length > 0) {\n              const upload = {\n                file: this.getFiles,\n                submissionId: data.submission.submissionId,\n                enteredBy: this.rtsUserId\n              };\n              this.submissionService.uploadFile(upload).subscribe(\n                file => {\n                  if (file.success) {\n                    this.toastr.success(file.message, '', {\n                      positionClass: 'toast-top-center',\n                      timeOut: 3000,\n                    });\n                  } else {\n                    this.toastr.error(file.message, '', {\n                      positionClass: 'toast-top-center',\n                      timeOut: 3000,\n                    });\n                  }\n                });\n            }\n            this.toastr.success('Update Submission Successfully', '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n            this.router.navigate(['submissions']);\n\n          } else {\n            this.toastr.error(data.message, '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n          }\n        });\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ApiUrl } from '../Services/api-url';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n    authToken: any;\r\n    user: any;\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    authenticateUser(user) {\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(ApiUrl.BaseUrl + ApiUrl.UserLogin, user,\r\n            { headers: headers })\r\n            .map(res => res.json());\r\n    }\r\n\r\n    storeUserData(token, rts) {\r\n        localStorage.setItem('id_token', token);\r\n        localStorage.setItem('rts_user', JSON.stringify(rts));\r\n        this.authToken = token;\r\n        this.user = rts;\r\n    }\r\n\r\n    logout() {\r\n        this.authToken = null;\r\n        this.user = null;\r\n        localStorage.removeItem('id_token');\r\n        localStorage.removeItem('rts_user');\r\n      }\r\n}\r\n","module.exports = \".login-container {\\r\\n  margin-top: 8em;\\r\\n  margin-left: 22em;\\r\\n  margin-right: 22em;\\r\\n  margin-bottom: 8em;\\r\\n  background: white;\\r\\n  box-shadow: 0 0 7px rgba(172, 172, 172, 0.7);\\r\\n  position: relative;\\r\\n  padding: 1em;\\r\\n}\\r\\n\\r\\n.register {\\r\\n    padding-top: 1em;\\r\\n    padding-left: 12em;\\r\\n    padding-right: 10em;\\r\\n}\\r\\n\\r\\n::ng-deep snack-bar-container.snackbar {\\r\\n  background: rgb(236, 97, 97);\\r\\n}\\r\\n\\r\\n::ng-deep .snackbar .mat-simple-snackbar {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"login-container\\\">\\n  <h1 class=\\\"title\\\">Login</h1>\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"login(myForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"userEmail\\\">Email address</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"userEmail\\\" placeholder=\\\"Enter email\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"userPassword\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"userPassword\\\" placeholder=\\\"Password\\\">\\n    </div>\\n    <div class=\\\"form-btn-container\\\">\\n      <a class=\\\"btn\\\">Cancel</a>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Login</button>\\n    </div>\\n  </form>\\n  <div class=\\\"row\\\">\\n    <p class=\\\"register\\\">\\n      <a [routerLink]=\\\"['/register']\\\" class=\\\"btn\\\">Register</a>|\\n      <a class=\\\"btn\\\">Forgot Password?</a>\\n    </p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from './login-service';\nimport { HideComponentService } from '../Services/hide-component.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  public myForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private hideComponent: HideComponentService,\n    private snackBar: MatSnackBar,\n    private toastr: ToastrService\n  ) {\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('rts_user');\n  }\n\n  ngOnInit() {\n\n    this.hideComponent.displayComponent = false;\n\n    this.myForm = this.formBuilder.group({\n      userEmail: ['', Validators.required],\n      userPassword: ['', Validators.required]\n    });\n  }\n\n  ngOnDestroy() {\n    this.hideComponent.displayComponent = true;\n  }\n\n  login(form: FormGroup) {\n    this.toastr.clear();\n\n    const user = {\n      email: form.value.userEmail,\n      password: form.value.userPassword\n    };\n\n    if (user.email === '' || user.email === null || user.password === '' || user.password === null\n    ) {\n      this.toastr.error('Username and password should not be empty', '', {\n        positionClass: 'toast-top-center',\n        timeOut: 3000,\n      });\n      return false;\n    }\n\n    console.log(user);\n\n    this.loginService.authenticateUser(user)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.loginService.storeUserData(data.token, data.user);\n            this.toastr.success('You are now logged in', '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n            this.router.navigate(['requirements']);\n          } else {\n            this.toastr.error(data.message, '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n          }\n        });\n  }\n\n}\n","module.exports = \".search-container {\\n  padding-top: 2em;\\n  padding-bottom: 2em;\\n}\\n\\n.search-container .text-input {\\n  width: 300px;\\n}\\n\\n.table-header {\\n  background-color: rgb(88, 82, 82);\\n  color: aliceblue;\\n}\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/add-client']\\\">Add New Client</button>\\n  <div class=\\\"search-container\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search by First Name\\\" name=\\\"searchString \\\" [(ngModel)]=\\\"searchString\\\">\\n  </div>\\n  <table class=\\\"table table-hover\\\">\\n    <thead class=\\\"table-header\\\">\\n      <tr>\\n        <th>Client Name</th>\\n        <th>Contact Person Name</th>\\n        <th>Contact Person Email</th>\\n        <th>Contact Person Number</th>\\n      </tr>\\n    </thead>\\n    <tbody *ngIf=\\\"clientsLength > 0 ; else noClients\\\">\\n      <tr *ngFor=\\\"let client of clients | filter:searchString\\\">\\n        <td>{{client.name}}</td>\\n        <td>{{client.contactPersonName}}</td>\\n        <td>{{client.contactPersonEmail}}</td>\\n        <td>{{client.contactPersonNumber}}</td>\\n      </tr>\\n    </tbody>\\n    <ng-template #noClients>\\n      <tbody>\\n        <tr>\\n          <td>No Client yet, Please click Add Client to add a new client.</td>\\n        </tr>\\n      </tbody>\\n    </ng-template>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { ClientService } from '../Services/client.service';\n\n@Component({\n  selector: 'app-manage-client',\n  templateUrl: './manage-client.component.html',\n  styleUrls: ['./manage-client.component.css'],\n  providers: [LoggedUserService]\n})\nexport class ManageClientComponent implements OnInit {\n  userType: any;\n  rtsUser: any;\n  rtsUserId: any;\n  rtsCompanyId: any;\n  clients: any;\n  clientsLength: any;\n\n  public myForm: FormGroup;\n  constructor(\n    private loggedUser: LoggedUserService,\n    private clientService: ClientService\n  ) {\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n    this.rtsCompanyId = this.rtsUser.companyId;\n  }\n\n  ngOnInit() {\n    this.getAllClients();\n  }\n\n  getAllClients() {\n    const companyId = {\n      companyId: this.rtsCompanyId\n    };\n\n    this.clientService.allClients(companyId)\n      .subscribe(\n        data => {\n          if (data.success) {\n            this.clients = data.clients;\n            this.clientsLength = this.clients.length;\n          }\n        });\n\n  }\n\n}\n","module.exports = \".search-container {\\r\\n  padding-top: 2em;\\r\\n  padding-bottom: 2em;\\r\\n}\\r\\n\\r\\n.search-container .text-input {\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\n.table-header {\\r\\n  background-color: rgb(88, 82, 82);\\r\\n  color: aliceblue;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/add-user']\\\">Add New User</button>\\n  <div class=\\\"search-container\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search by First Name\\\" name=\\\"searchString \\\" [(ngModel)]=\\\"searchString\\\">\\n  </div>\\n  <table class=\\\"table table-hover\\\">\\n    <thead class=\\\"table-header\\\">\\n      <tr>\\n        <th>First Name</th>\\n        <th>Last Name</th>\\n        <th>Email</th>\\n        <th>Role</th>\\n      </tr>\\n    </thead>\\n    <tbody *ngIf=\\\"userLength > 0 ; else noUser\\\">\\n      <tr *ngFor=\\\"let user of userDetails | filter:searchString\\\">\\n        <td>{{user.firstName}}</td>\\n        <td>{{user.lastName}}</td>\\n        <td>{{user.email}}</td>\\n        <td>{{user.role}}</td>\\n      </tr>\\n    </tbody>\\n    <ng-template #noUser>\\n      <tbody>\\n        <tr>\\n          <td>No Users yet, Please click Add User to add a new user.</td>\\n        </tr>\\n      </tbody>\\n    </ng-template>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../Services/user.service';\n\n@Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.css'],\n  providers: [LoggedUserService]\n})\nexport class ManageUsersComponent implements OnInit {\n\n  rtsUser: any;\n  rtsUserId: any;\n  userDetails: any;\n  userLength: any;\n\n  constructor(\n    private loggedUser: LoggedUserService,\n    private router: Router,\n    private userService: UserService\n  ) {\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n  }\n\n  ngOnInit() {\n    this.getAllUser();\n  }\n\n  getAllUser() {\n    const userId = {\n      enteredBy: this.rtsUserId\n    };\n\n    console.log(userId);\n    this.userService.allUsers(userId)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.userDetails = data.users;\n            this.userLength = this.userDetails.length;\n          }\n        });\n\n  }\n\n}\n","module.exports = \".btn-space {\\r\\n  margin-right: 1em;\\r\\n}\\r\\n\\r\\n.fileContainer {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.fileContainer [type=file] {\\r\\n  cursor: inherit;\\r\\n  display: blck;\\r\\n  font-size: 999px;\\r\\n  filter: alpha(opacity=0);\\r\\n  min-height: 100%;\\r\\n  min-width: 100%;\\r\\n  opacity: 0;\\r\\n  position: absolute;\\r\\n  right: 0;\\r\\n  text-align: right;\\r\\n  top: 0;\\r\\n}\\r\\n\\r\\n.panel {\\r\\n  padding: .5em;\\r\\n  background: rgb(241, 237, 237);\\r\\n  color: blue;\\r\\n  height: 30px;\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\n.material-icons {\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"addNewSubmission(myForm)\\\">\\n    <legend class=\\\"header\\\">Add New Submission</legend>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"requirements\\\" class=\\\"col-sm-2 col-form-label\\\">Requirements:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <select name=\\\"requirements\\\" class=\\\"form-control\\\" formControlName=\\\"requirements\\\" required>\\n          <option value=\\\"\\\">Select</option>\\n          <option *ngFor=\\\"let require of requirementsDetails\\\" value=\\\"{{require.requirementId}}\\\">{{require.positionName}} {{require.client.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"candidateName\\\" class=\\\"col-sm-2 col-form-label\\\">Candidate Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"candidateName\\\" formControlName=\\\"candidateName\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"location\\\" class=\\\"col-sm-2 col-form-label\\\">Location:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"location\\\" formControlName=\\\"location\\\" required>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"rate\\\" class=\\\"col-sm-2 col-form-label\\\">Rate:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"rate\\\" formControlName=\\\"rate\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"availability\\\" class=\\\"col-sm-2 col-form-label\\\">Availability:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"availability\\\" formControlName=\\\"availability\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"technology\\\" class=\\\"col-sm-2 col-form-label\\\">Technology:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"technology\\\" formControlName=\\\"technology\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"accountName\\\" class=\\\"col-sm-2 col-form-label\\\">Account Name:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"accountName\\\" formControlName=\\\"accountName\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"workLocation\\\" class=\\\"col-sm-2 col-form-label\\\">Work Location:</label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"workLocation\\\" formControlName=\\\"workLocation\\\" required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <div>\\n        <label class=\\\"fileContainer\\\">\\n          <button class=\\\"btn btn-secondary\\\">\\n            Attach Files</button>\\n          <input type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" multiple/>\\n        </label>\\n      </div>\\n      <div class=\\\"pb-2\\\" *ngFor=\\\"let file of getFiles\\\">\\n        <a class=\\\"panel\\\">{{file.name}}\\n        </a>\\n        <a class=\\\"btn\\\" (click)=\\\"removeFile(file)\\\">\\n          <i class=\\\"material-icons\\\">\\n            clear\\n          </i>\\n        </a>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-btn-container\\\">\\n      <button class=\\\"btn btn-default btn-space\\\" type=\\\"submit\\\">Add Submission</button>\\n      <a [routerLink]=\\\"[ '/submissions']\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { RequirementsService } from '../Services/requirements.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { SubmissionService } from '../Services/submission.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recruiter-add-new-submissions',\n  templateUrl: './recruiter-add-new-submissions.component.html',\n  styleUrls: ['./recruiter-add-new-submissions.component.css'],\n  providers: [LoggedUserService]\n})\nexport class RecruiterAddNewSubmissionsComponent implements OnInit {\n\n  public myForm: FormGroup;\n  rtsUser: any;\n  rtsUserId: any;\n  requirementsDetails: any;\n  files: any;\n  getFiles: any;\n  rtsCompanyId: any;\n\n  constructor(\n    private loggedUser: LoggedUserService,\n    private requirementService: RequirementsService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private submissionService: SubmissionService,\n    private router: Router\n  ) {\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n    this.getFiles = [];\n  }\n\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      requirements: ['', Validators.required],\n      candidateName: [''],\n      accountName: [''],\n      location: [''],\n      rate: ['', Validators.required],\n      availability: [''],\n      technology: [''],\n      workLocation: ['']\n    });\n    this.getAllRequirementsForUser();\n  }\n  getAllRequirementsForUser() {\n\n    const userId = {\n      userId: this.rtsUserId\n    };\n    console.log(this.rtsUserId);\n\n    this.requirementService.requirementsDetailsForUser(userId)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.requirementsDetails = data.requirements;\n          }\n        });\n  }\n\n  fileChangeEvent(event: any) {\n    this.files = event.target.files;\n    for (const file of this.files) {\n      this.getFiles.push(file);\n    }\n  }\n\n  removeFile(file) {\n    const clear = this.getFiles.indexOf(file);\n    this.getFiles.splice(clear, 1);\n  }\n\n  addNewSubmission(form: FormGroup) {\n\n    const submission = {\n      requirementId: form.value.requirements,\n      candidateName: form.value.candidateName,\n      location: form.value.location,\n      accountName: form.value.accountName,\n      rate: form.value.rate,\n      availability: form.value.availability,\n      technology: form.value.technology,\n      workLocation: form.value.workLocation,\n      enteredBy: this.rtsUserId,\n    };\n\n    console.log(submission);\n\n    this.submissionService.addSubmission(submission)\n      .subscribe(\n        data => {\n          if (data.success) {\n\n            if (this.getFiles.length > 0) {\n              const upload = {\n                file: this.getFiles,\n                submissionId: data.submission.submissionId,\n                enteredBy: this.rtsUserId\n              };\n              this.submissionService.uploadFile(upload).subscribe(\n                file => {\n                  if (file.success) {\n                    this.toastr.success(file.message, '', {\n                      positionClass: 'toast-top-center',\n                      timeOut: 3000,\n                    });\n                  } else {\n                    this.toastr.error(file.message, '', {\n                      positionClass: 'toast-top-center',\n                      timeOut: 3000,\n                    });\n                  }\n                });\n            }\n            this.toastr.success('New Submission Successfully added', '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n            this.router.navigate(['recruiter-submissions']);\n\n          } else {\n            this.toastr.error(data.message, '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n          }\n        });\n  }\n}\n","module.exports = \".title {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n\\r\\n.table-header {\\r\\n  background-color: whitesmoke;\\r\\n  color: rgb(51, 48, 48);\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/recruiter-add-new-submissions']\\\">Add New Submission</button>\\n  <!-- <div class=\\\"search-container\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search by Position Name\\\" name=\\\"searchString \\\" [(ngModel)]=\\\"searchString\\\">\\n    </div> -->\\n\\n  <div *ngIf=\\\"submissionsLength > 0 ; else noSummissions\\\">\\n    <div *ngFor=\\\"let sub of submissionDetails\\\">\\n      <p class=\\\"title\\\">{{sub.positionName}} ({{sub.client.name}})</p>\\n      <table class=\\\"table table-hover\\\">\\n        <thead class=\\\"table-header\\\">\\n          <tr>\\n            <th>Submission Date:</th>\\n            <th>Candidate Name</th>\\n            <th>Technology</th>\\n            <th>Availability</th>\\n            <th>Rate</th>\\n            <th>Work Location</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let submission of sub.submissions\\\" [routerLink]=\\\"['/edit-submissions', submission.submissionId]\\\">\\n            <td>{{submission.submissionOn | date: 'MMM d, y'}}</td>\\n            <td>{{submission.candidateName}}</td>\\n            <td>{{submission.technology}}</td>\\n            <td>{{submission.availability}}</td>\\n            <td>{{submission.rate}}</td>\\n            <td>{{submission.workLocation}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  <ng-template #noSummissions>\\n    <p class=\\\"message\\\">No Submissions yet, Please click Add Submission to add a new submission.</p>\\n  </ng-template>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { RequirementsService } from '../Services/requirements.service';\nimport { HideComponentService } from '../Services/hide-component.service';\n\n@Component({\n  selector: 'app-recruiter-submissions',\n  templateUrl: './recruiter-submissions.component.html',\n  styleUrls: ['./recruiter-submissions.component.css'],\n  providers: [LoggedUserService]\n})\nexport class RecruiterSubmissionsComponent implements OnInit {\n\n  rtsUser: any;\n  rtsUserId: any;\n  requirementsForUser: any;\n  requirementsLengthForUser: any;\n  submissionDetails: any;\n  submissionsLength: any;\n\n  constructor(private loggedUser: LoggedUserService,\n    private requirementService: RequirementsService,\n    private hideComponent: HideComponentService,\n  ) {\n    this.hideComponent.displayComponent = true;\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsUserId = this.rtsUser.userId;\n    this.submissionDetails = [];\n  }\n\n  ngOnInit() {\n    this.getAllRequirementsForUser();\n  }\n\n\n  getAllRequirementsForUser() {\n\n    const userId = {\n      userId: this.rtsUserId\n    };\n    console.log(this.rtsUserId);\n\n    this.requirementService.requirementsDetailsForUser(userId)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.requirementsForUser = data.requirements;\n            for (const require of this.requirementsForUser) {\n              if (require.submissions.length > 0) {\n                console.log(require);\n                this.submissionDetails.push(require);\n              }\n            }\n            console.log(this.submissionDetails);\n            this.submissionsLength = this.submissionDetails.length;\n          }\n        });\n  }\n\n}\n","module.exports = \".search-container {\\r\\n  padding-top: 2em;\\r\\n  padding-bottom: 2em;\\r\\n}\\r\\n\\r\\n.search-container .text-input {\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\n.table-header {\\r\\n  background-color: rgb(88, 82, 82);\\r\\n  color: aliceblue;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <div *ngIf=\\\"userRole ==='ADMIN'\\\">\\n    <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/add-new-requirement']\\\">Add New Requirement</button>\\n    <div class=\\\"search-container\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search by Position Name\\\" name=\\\"searchString \\\" [(ngModel)]=\\\"searchString\\\">\\n    </div>\\n    <table class=\\\"table table-hover\\\">\\n      <thead class=\\\"table-header\\\">\\n        <tr>\\n          <th>Position Name</th>\\n          <th>Status</th>\\n          <th>Positions</th>\\n          <th>Alloction</th>\\n          <th>Client</th>\\n          <th>Age</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"requirementsLength> 0 ; else noRequirements\\\">\\n        <tr *ngFor=\\\"let require of requirements | filter:searchString\\\" [routerLink]=\\\"['/edit-requirement',require.requirementId]\\\">\\n          <td>{{require.positionName}}</td>\\n          <td>{{require.status}}</td>\\n          <td>{{require.positionCount}}</td>\\n          <td *ngIf=\\\"require.allocationUser ; else noAlloction\\\">{{require.allocationUser.firstName}} {{require.allocationUser.lastName}}</td>\\n          <ng-template #noAlloction>\\n            <td>Nil</td>\\n          </ng-template>\\n          <td>{{require.client.name}}</td>\\n          <td>{{require.age}}</td>\\n        </tr>\\n      </tbody>\\n      <ng-template #noRequirements>\\n        <tbody>\\n          <tr>\\n            <td>No requirements yet, Please click Add Requirement to add a new requirement.</td>\\n          </tr>\\n        </tbody>\\n      </ng-template>\\n    </table>\\n  </div>\\n\\n  <div *ngIf=\\\"userRole ==='RECRUITER'\\\">\\n    <div class=\\\"search-container\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search by Position Name\\\" name=\\\"searchString \\\" [(ngModel)]=\\\"searchString\\\">\\n    </div>\\n\\n    <table class=\\\"table table-hover\\\">\\n      <thead class=\\\"table-header\\\">\\n        <tr>\\n          <th>Position Name</th>\\n          <th>Status</th>\\n          <th>Positions</th>\\n          <th>Alloction</th>\\n          <th>Client</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"requirementsLengthForUser > 0 ; else noRequirements\\\">\\n        <tr *ngFor=\\\"let require of requirementsForUser | filter:searchString\\\">\\n          <td>{{require.positionName}}</td>\\n          <td>{{require.status}}</td>\\n          <td>{{require.positionCount}}</td>\\n          <td>{{require.allocationUser.firstName}} {{require.allocationUser.lastName}}</td>\\n          <td>{{require.client.name}}</td>\\n        </tr>\\n      </tbody>\\n      <ng-template #noRequirements>\\n        <tbody>\\n          <tr>\\n            <td>No requirements yet, Please click Add Requirement to add a new requirement.</td>\\n          </tr>\\n        </tbody>\\n      </ng-template>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { RequirementsService } from '../Services/requirements.service';\nimport * as moment from 'moment';\nimport { HideComponentService } from '../Services/hide-component.service';\n\n@Component({\n  selector: 'app-requirements',\n  templateUrl: './requirements.component.html',\n  styleUrls: ['./requirements.component.css'],\n  providers: [LoggedUserService]\n})\nexport class RequirementsComponent implements OnInit {\n  rtsUser: any;\n  rtsUserId: any;\n  requirements: any;\n  createdOn: any;\n  requirementsLength: any;\n  userRole: any;\n  requirementsForUser: any;\n  requirementsLengthForUser: any;\n  rtsCompanyId: any;\n\n  private currentDate: Date;\n\n  constructor(private loggedUser: LoggedUserService,\n    private requirementService: RequirementsService,\n    private hideComponent: HideComponentService,\n  ) {\n    this.hideComponent.displayComponent = true;\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsCompanyId = this.rtsUser.companyId;\n    this.rtsUserId = this.rtsUser.userId;\n    this.userRole = this.rtsUser.role;\n    this.currentDate = new Date();\n  }\n\n  ngOnInit() {\n    this.hideComponent.displayComponent = true;\n    this.getAllRequirements();\n    this.getAllRequirementsForUser();\n  }\n\n  getAllRequirements() {\n\n    const userId = {\n      companyId: this.rtsCompanyId\n    };\n    console.log(this.rtsUserId);\n\n    this.requirementService.requirementsDetails(userId)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.requirements = data.requirements;\n            this.requirementsLength = this.requirements.length;\n            for (const require of this.requirements) {\n              const diff = Math.floor(this.currentDate.getTime() - require.createdOn);\n              const day = 1000 * 60 * 60 * 24;\n              const days = Math.floor(diff / day);\n              const months = Math.floor(days / 31);\n              const years = Math.floor(months / 12);\n              if (days > 7) {\n                require.age = days + ' days ago';\n              }\n            }\n          }\n        });\n  }\n\n  getAllRequirementsForUser() {\n\n    const userId = {\n      userId: this.rtsUserId\n    };\n    console.log(this.rtsUserId);\n\n    this.requirementService.requirementsDetailsForUser(userId)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.requirementsForUser = data.requirements;\n            this.requirementsLengthForUser = this.requirementsForUser.length;\n          }\n        });\n  }\n\n}\n","module.exports = \".title {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n\\r\\n.table-header {\\r\\n  background-color: whitesmoke;\\r\\n  color: rgb(51, 48, 48);\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/add-new-submission']\\\">Add New Submission</button>\\n  <!-- <div class=\\\"search-container\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search by Position Name\\\" name=\\\"searchString \\\" [(ngModel)]=\\\"searchString\\\">\\n  </div> -->\\n\\n  <div *ngIf=\\\"submissionsLength > 0 ; else noSummissions\\\">\\n    <p class=\\\"title\\\">{{selectedRequirement.positionName}} ({{selectedRequirement.client.name}})</p>\\n    <table class=\\\"table table-hover\\\">\\n      <thead class=\\\"table-header\\\">\\n        <tr>\\n          <th>Submission Date:</th>\\n          <th>Candidate Name</th>\\n          <th>Technology</th>\\n          <th>Availability</th>\\n          <th>Rate</th>\\n          <th>Work Location</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let submission of selectedRequirement.submissions\\\" [routerLink]=\\\"['/edit-submissions', submission.submissionId]\\\">\\n          <td>{{submission.submissionOn | date: 'MMM d, y'}}</td>\\n          <td>{{submission.candidateName}}</td>\\n          <td>{{submission.technology}}</td>\\n          <td>{{submission.availability}}</td>\\n          <td>{{submission.rate}}</td>\\n          <td>{{submission.workLocation}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <ng-template #noSummissions>\\n    <p class=\\\"message\\\">No Submissions yet, Please click Add Submission to add a new submission.</p>\\n  </ng-template>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RequirementsService } from '../Services/requirements.service';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-submission-by-requirement',\n  templateUrl: './submission-by-requirement.component.html',\n  styleUrls: ['./submission-by-requirement.component.css'],\n  providers: [LoggedUserService]\n})\nexport class SubmissionByRequirementComponent implements OnInit {\n\n  rtsUser: any;\n  rtsCompanyId: any;\n  requirementId: any;\n  requirements: any;\n  selectedRequirement: any;\n  submissionsLength: any;\n\n  constructor(private loggedUser: LoggedUserService,\n    private requirementService: RequirementsService,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsCompanyId = this.rtsUser.companyId;\n    // this.rtsUserId = this.rtsUser.userId;\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params\n      .subscribe((params: Params) => {\n        this.requirementId = params['id'];\n      });\n    this.getAllRequirements();\n  }\n\n  getAllRequirements() {\n\n    const userId = {\n      companyId: this.rtsCompanyId\n    };\n\n    this.requirementService.requirementsDetails(userId)\n      .subscribe(\n        data => {\n          if (data.success) {\n            this.requirements = data.requirements;\n            this.selectedRequirement = _.findWhere(this.requirements, { requirementId: this.requirementId });\n            console.log(this.selectedRequirement);\n            this.submissionsLength = this.selectedRequirement.submissions.length;\n          }\n        });\n  }\n\n}\n\n","module.exports = \".search-container {\\r\\n  padding-top: 2em;\\r\\n  padding-bottom: 2em;\\r\\n}\\r\\n\\r\\n.search-container .text-input {\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\n.table-header {\\r\\n  background-color: whitesmoke;\\r\\n  color: rgb(51, 48, 48);\\r\\n}\\r\\n\\r\\n.title {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"utility-container\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/add-new-submission']\\\">Add New Submission</button>\\n  <!-- <div class=\\\"search-container\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Search by Position Name\\\" name=\\\"searchString \\\" [(ngModel)]=\\\"searchString\\\">\\n  </div> -->\\n\\n  <div *ngIf=\\\"submissionsLength > 0 ; else noSummissions\\\">\\n    <div *ngFor=\\\"let sub of submissionDetails\\\">\\n      <p class=\\\"title\\\">{{sub.positionName}} ({{sub.client.name}})</p>\\n      <div *ngIf=\\\"sub.allocationUser !== undefined\\\">\\n        <p><b>Allocated to: {{sub.allocationUser.firstName}} {{sub.allocationUser.lastName}}</b></p>\\n      </div>\\n      <table class=\\\"table table-hover\\\">\\n        <thead class=\\\"table-header\\\">\\n          <tr>\\n            <th>Submission Date:</th>\\n            <th>Candidate Name</th>\\n            <th>Technology</th>\\n            <th>Availability</th>\\n            <th>Rate</th>\\n            <th>Work Location</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let submission of sub.submissions\\\" [routerLink]=\\\"['/edit-submissions', submission.submissionId]\\\">\\n            <td>{{submission.submissionOn | date: 'MMM d, y'}}</td>\\n            <td>{{submission.candidateName}}</td>\\n            <td>{{submission.technology}}</td>\\n            <td>{{submission.availability}}</td>\\n            <td>{{submission.rate}}</td>\\n            <td>{{submission.workLocation}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  <ng-template #noSummissions>\\n    <p class=\\\"message\\\">No Submissions yet, Please click Add Submission to add a new submission.</p>\\n  </ng-template>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoggedUserService } from '../Services/logged-user.service';\nimport { RequirementsService } from '../Services/requirements.service';\nimport { HideComponentService } from '../Services/hide-component.service';\nimport * as moment from 'moment';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-submissions',\n  templateUrl: './submissions.component.html',\n  styleUrls: ['./submissions.component.css'],\n  providers: [LoggedUserService]\n})\nexport class SubmissionsComponent implements OnInit {\n\n  rtsUser: any;\n  rtsUserId: any;\n  submissions: any;\n  submissionsLength: any;\n  requirements: any;\n  submissionDetails: any;\n  rtsCompanyId: any;\n\n  constructor(private loggedUser: LoggedUserService,\n    private requirementService: RequirementsService,\n    private hideComponent: HideComponentService\n  ) {\n    this.hideComponent.displayComponent = true;\n    this.rtsUser = JSON.parse(this.loggedUser.loggedUser);\n    this.rtsCompanyId = this.rtsUser.companyId;\n    this.rtsUserId = this.rtsUser.userId;\n    this.submissionDetails = [];\n  }\n\n  ngOnInit() {\n    this.getAllSubmissions();\n  }\n\n\n  getAllSubmissions() {\n\n    const userId = {\n      companyId: this.rtsCompanyId\n    };\n\n    this.requirementService.requirementsDetails(userId)\n      .subscribe(\n        data => {\n          if (data.success) {\n            this.requirements = data.requirements;\n            for (const require of this.requirements) {\n              if (require.submissions.length > 0) {\n                this.submissionDetails.push(require);\n              }\n            }\n            console.log(this.submissionDetails);\n            this.submissionsLength = this.submissionDetails.length;\n          }\n        });\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ApiUrl } from '../Services/api-url';\r\n\r\n@Injectable()\r\nexport class RegisterService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  registerUser(userRegister) {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(ApiUrl.BaseUrl + ApiUrl.AddCompanyUser, userRegister,\r\n      { headers: headers })\r\n      .map(res => res.json());\r\n  }\r\n}\r\n","module.exports = \".register-container {\\r\\n  margin-top: 6em;\\r\\n  margin-left: 16em;\\r\\n  margin-right: 16em;\\r\\n  margin-bottom: 8em;\\r\\n  background: white;\\r\\n  box-shadow: 0 0 7px rgba(172, 172, 172, 0.7);\\r\\n  position: relative;\\r\\n  padding: 1em;\\r\\n}\\r\\n.ng-valid[required], .ng-valid.required {\\r\\n    border-left: 5px solid #42A948;\\r\\n  }\\r\\n.ng-invalid:not(form) {\\r\\n    border-left: 5px solid #c84e02;\\r\\n  }\\r\\n\"","module.exports = \"<div class=\\\"register-container\\\">\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"register(myForm)\\\">\\n\\n    <p class=\\\"title\\\">Company</p>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"companyName\\\">Name:\\n        <span *ngIf=\\\"myForm.controls['companyName'].errors && (myForm.controls['companyName'].dirty || myForm.controls['companyName'].touched)\\\">\\n        </span>\\n      </label>\\n      <div>\\n        <input type=\\\"text\\\" id=\\\"companyName\\\" name=\\\"companyName\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"companyName\\\"\\n          ngModel required>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"companyAddress1\\\">Address 1:\\n          <span *ngIf=\\\"myForm.controls['companyAddress1'].errors && (myForm.controls['companyAddress1'].dirty || myForm.controls['companyAddress1'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"companyAddress1\\\" name=\\\"companyAddress1\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"companyAddress1\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"companyAddress2\\\">Address 2:\\n          <span *ngIf=\\\"myForm.controls['companyAddress2'].errors && (myForm.controls['companyAddress2'].dirty || myForm.controls['companyAddress2'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"companyAddress2\\\" name=\\\"companyAddress2\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"companyAddress2\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-4\\\">\\n        <label for=\\\"city\\\">City:\\n          <span *ngIf=\\\"myForm.controls['city'].errors && (myForm.controls['city'].dirty || myForm.controls['city'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"city\\\" name=\\\"city\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"city\\\" ngModel required>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-4\\\">\\n        <label for=\\\"state\\\">State:\\n          <span *ngIf=\\\"myForm.controls['state'].errors && (myForm.controls['state'].dirty || myForm.controls['state'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"state\\\" name=\\\"state\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"state\\\" ngModel required>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-4\\\">\\n        <label for=\\\"companyZipcode\\\">ZipCode:\\n          <span *ngIf=\\\"myForm.controls['companyZipcode'].errors && (myForm.controls['companyZipcode'].dirty || myForm.controls['companyZipcode'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"companyZipcode\\\" name=\\\"companyZipcode\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"companyZipcode\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"companyPhoneNumber\\\">PhoneNumber:\\n        <span *ngIf=\\\"myForm.controls['companyPhoneNumber'].errors && (myForm.controls['companyPhoneNumber'].dirty || myForm.controls['companyPhoneNumber'].touched)\\\">\\n        </span>\\n      </label>\\n      <div>\\n        <input type=\\\"text\\\" id=\\\"companyPhoneNumber\\\" name=\\\"companyPhoneNumber\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"companyPhoneNumber\\\"\\n          ngModel required>\\n      </div>\\n    </div>\\n\\n    <p class=\\\"title\\\">Admin User</p>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"userFirstName\\\">FirstName:\\n          <span *ngIf=\\\"myForm.controls['userFirstName'].errors && (myForm.controls['userFirstName'].dirty || myForm.controls['userFirstName'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"userFirstName\\\" name=\\\"userFirstName\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"userFirstName\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"userLastName\\\">LastName:\\n          <span *ngIf=\\\"myForm.controls['userLastName'].errors && (myForm.controls['userLastName'].dirty || myForm.controls['userLastName'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"userLastName\\\" name=\\\"userLastName\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"userLastName\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"userEmail\\\">Email\\n          <span *ngIf=\\\"myForm.controls['userEmail'].errors && (myForm.controls['userEmail'].dirty || myForm.controls['userEmail'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"userEmail\\\" name=\\\"userEmail\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"userEmail\\\" ngModel\\n            required>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"userPhoneNumber\\\">PhoneNumber:\\n          <span *ngIf=\\\"myForm.controls['userPhoneNumber'].errors && (myForm.controls['userPhoneNumber'].dirty || myForm.controls['userPhoneNumber'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"userPhoneNumber\\\" name=\\\"userPhoneNumber\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"userPhoneNumber\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"password\\\">Password:\\n          <span *ngIf=\\\"myForm.controls['password'].errors && (myForm.controls['password'].dirty || myForm.controls['password'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"password\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"confirmPassword\\\">Confirm Password:\\n          <span *ngIf=\\\"myForm.controls['confirmPassword'].errors && (myForm.controls['confirmPassword'].dirty || myForm.controls['confirmPassword'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"password\\\" id=\\\"confirmPassword\\\" name=\\\"confirmPassword\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"confirmPassword\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"userAddress1\\\">Address 1:\\n          <span *ngIf=\\\"myForm.controls['userAddress1'].errors && (myForm.controls['userAddress1'].dirty || myForm.controls['userAddress1'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"userAddress1\\\" name=\\\"userAddress1\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"userAddress1\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group col-6\\\">\\n        <label for=\\\"userAddress2\\\">Address 2:\\n          <span *ngIf=\\\"myForm.controls['userAddress2'].errors && (myForm.controls['userAddress2'].dirty || myForm.controls['userAddress2'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"userAddress2\\\" name=\\\"userAddress2\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"userAddress2\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-4\\\">\\n        <label for=\\\"userCity\\\">City:\\n          <span *ngIf=\\\"myForm.controls['userCity'].errors && (myForm.controls['userCity'].dirty || myForm.controls['userCity'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"userCity\\\" name=\\\"userCity\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"userCity\\\" ngModel required>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-4\\\">\\n        <label for=\\\"userState\\\">State:\\n          <span *ngIf=\\\"myForm.controls['userState'].errors && (myForm.controls['userState'].dirty || myForm.controls['userState'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"userState\\\" name=\\\"userState\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"userState\\\" ngModel\\n            required>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-4\\\">\\n        <label for=\\\"userZipcode\\\">ZipCode:\\n          <span *ngIf=\\\"myForm.controls['userZipcode'].errors && (myForm.controls['userZipcode'].dirty || myForm.controls['userZipcode'].touched)\\\">\\n          </span>\\n        </label>\\n        <div>\\n          <input type=\\\"text\\\" id=\\\"userZipcode\\\" name=\\\"userZipcode\\\" class=\\\"form-control\\\" maxlength=\\\"80\\\" formControlName=\\\"userZipcode\\\"\\n            ngModel required>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-btn-container\\\">\\n      <a [routerLink]=\\\"['/login']\\\" class=\\\"btn\\\">Cancel</a>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Register</button>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm, FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { RegisterService } from './user-register-service';\nimport { Router } from '@angular/router';\nimport { HideComponentService } from '../Services/hide-component.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css'],\n  providers: [RegisterService],\n})\nexport class UserRegisterComponent implements OnInit, OnDestroy {\n\n  public myForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private registerService: RegisterService,\n    private router: Router,\n    private hideComponent: HideComponentService,\n    private toastr: ToastrService\n  ) {\n    this.hideComponent.displayComponent = false;\n  }\n\n  ngOnInit() {\n\n    this.hideComponent.displayComponent = false;\n\n    this.myForm = this.formBuilder.group({\n      companyName: ['', Validators.required],\n      companyAddress1: ['', Validators.required],\n      companyAddress2: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      companyZipcode: ['', [Validators.required, Validators.pattern('^\\\\d{5}(?:[-\\\\s]\\\\d{4})?$')]],\n      companyPhoneNumber: ['', [Validators.required, Validators.pattern('^[0-9]*$')]],\n      userFirstName: ['', Validators.required],\n      userLastName: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n      userAddress1: ['', Validators.required],\n      userAddress2: ['', Validators.required],\n      userEmail: ['', Validators.required],\n      userCity: ['', Validators.required],\n      userState: ['', Validators.required],\n      userZipcode: ['', [Validators.required, Validators.pattern('^\\\\d{5}(?:[-\\\\s]\\\\d{4})?$')]],\n      userPhoneNumber: ['', [Validators.required, Validators.pattern('^[0-9]*$')]],\n    });\n  }\n\n  ngOnDestroy() {\n    this.hideComponent.displayComponent = true;\n  }\n\n  register(form: FormGroup) {\n    const company = {\n      name: form.value.companyName,\n      address1: form.value.companyAddress1,\n      address2: form.value.companyAddress2,\n      city: form.value.city,\n      state: form.value.state,\n      zipCode: form.value.companyZipcode,\n      phoneNumber: form.value.companyPhoneNumber\n    };\n\n    const user = {\n      firstName: form.value.userFirstName,\n      lastName: form.value.userLastName,\n      password: form.value.password,\n      address1: form.value.userAddress1,\n      address2: form.value.userAddress2,\n      email: form.value.userEmail,\n      city: form.value.userCity,\n      state: form.value.userState,\n      zipCode: form.value.userZipcode,\n      phoneNumber: form.value.userPhoneNumber\n    };\n\n    const userRegister = {\n      company: company,\n      adminUser: user\n    };\n    console.log(userRegister);\n\n    this.registerService.registerUser(userRegister)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.success) {\n            this.toastr.success('You are now registered and can log in', '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n            this.router.navigate(['login']);\n          } else {\n            this.toastr.error(data.message, '', {\n              positionClass: 'toast-top-center',\n              timeOut: 3000,\n            });\n          }\n        });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}